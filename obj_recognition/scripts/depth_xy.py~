#!/usr/bin/env python

import cv2
import numpy as np
from sensor_msgs.msg import Image,CameraInfo,CompressedImage,PointCloud2
import sensor_msgs.point_cloud2 as pc2
from cv_bridge import CvBridge,CvBridgeError
import rospy
import time
import math

from obj_recognition.srv import *

bridge = CvBridge()

x=0
y=0
z=0

def depth(ros_cloud):
	global z
	data_out = pc2.read_points(ros_cloud, field_names=("x","y","z"), skip_nans=True, uvs=[[int(x), int(y)]])

        if data_out:
            try:
                cam_x, cam_y, cam_z = next(data_out)
		z=cam_z
		#print z,cam_z
            except Exception:
                pass
         

def handle_z(req):
    
    global x
    global y
    global z
    x=req.x
    y=req.y
   
    #print(x,y,z)
   
    
    time.sleep(0.01)
    return Get_zResponse(z)


def listener():
	
	 rospy.Subscriber("/camera/depth_registered/points", PointCloud2,depth)
	rospy.init_node('z_server')
	#print("in listener")
	s = rospy.Service('get_depth', Get_z, handle_z)
	print "Ready to give depth"
	
	#rospy.Subscriber("/camera/depth_registered/points", PointCloud2,depth)
	
	rospy.spin()



if __name__ == '__main__':
    listener()




